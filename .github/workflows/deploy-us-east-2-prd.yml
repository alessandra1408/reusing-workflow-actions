name: Regiao

on:
  workflow_call:
    inputs:
      region:
        type: string
        description: 'Região'
        required: true

jobs:
  show_region:
    runs-on: ubuntu-latest
    steps:
      - name: Write somthing to log
        run: |
            echo "Iniciando a action de deploy na região de ${{inputs.region}}"

  build: 
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push.outputs.image }}
      tag: ${{ steps.push.outputs.tag }}
    steps:
      - name: Check for existing image and tag
        id: check_file
        uses: andstor/file-existence-action@v1
        with:
          files: 'image_info.txt'
      
      - name: Files exist
        if: steps.check_file.outputs.files_exists == 'true'
        run: |
            echo "Image and tag already exist. Reading values..."
            source image_info.txt
            echo "::set-output name=image::$image"
            echo "::set-output name=tag::$tag"
        
      - name: File not exist
        if: steps.check_file.outputs.files_exists == 'false'
        run: |
            echo "No existing image and tag. Proceeding with build..."
            echo "::set-output name=image::"
            echo "::set-output name=tag::"

      - name: Push image to ECR
        if: steps.check_file.outputs.files_exists == 'false'
        id: push
        run: |
          echo "::set-output name=image::hello
          echo "::set-output name=image::world

      - name: Save image and tag to artifact
        if: steps.check_file.outputs.files_exists == 'false'
        run: |
          echo "image=${{ steps.push.outputs.image }}" > image_info.txt
          echo "tag=${{ steps.push.outputs.tag }}" >> image_info.txt
    
      - name: Upload artifact
        if: steps.check_file.outputs.files_exists == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: image-info
          path: image_info.txt
      
      - name: Download artifact
        if: steps.check_file.outputs.files_exists == 'true'
        uses: actions/download-artifact@v3
        with:
          name: image-info
          path: .

      - name: Read variables from file
        if: steps.check_file.outputs.files_exists == 'true'
        id: read-vars
        run: |
          source image_info.txt
          echo "image=$image"
          echo "tag=$tag"
          echo "::set-output name=image::$image"
          echo "::set-output name=tag::$tag"
        shell: bash

      - name: Use variables
        if: steps.check_file.outputs.files_exists == 'true'
        run: echo "Using IMAGE=$image and TAG=$tag"
        env:
          image: ${{ steps.read-vars.outputs.image }}
          tag: ${{ steps.read-vars.outputs.tag }}
    

  product_approve:
    needs: [build]
    runs-on: ubuntu-latest
    environment: product_approve
    steps:
      - name: Write somthing to log
        run: |
              echo "Deploy regiao 2"

  tech_approve:
    needs: [build]
    runs-on: ubuntu-latest
    environment: tech_approve
    steps:
      - name: Write somthing to log
        run: |
              echo "Deploy regiao 2"

  start_job:
    needs: [product_approve, tech_approve]
    runs-on: ubuntu-latest
    environment: start_job
    steps:      
      - name: Show who started the job
        run: |
          echo "Iniciando o deploy na região de ${{inputs.region}}.
          Este job foi iniciado por: $GITHUB_ACTOR"
  
  done:
    needs: [start_job]
    runs-on: ubuntu-latest
    steps:
      - name: finalização
        run: |
          echo "finalizado"